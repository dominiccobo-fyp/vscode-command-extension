{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/toMarkdown.pipe.ts","webpack:///src/app/work-items/work-items.component.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","title","event","message","data","console","log","command","host","serverHost","resource","fileUri","folderUri","queryTerm","vscodeApi","acquireVsCodeApi","selector","template","styleUrls","AppModule","declarations","imports","providers","bootstrap","ToMarkdownPipe","value","Converter","makeHtml","replace","name","PreFetchResponse","identifier","WorkItemsComponent","http","currentPage","workItems","updatePageContent","getWorkItems","subscribe","items","forEach","item","push","get","connectorUrl","pipe","result","currentIdentifier","fetchResults","undefined","fetchWorkItems","onScrolledDown","onScrolledUp","styles","environment","production","daemonHostUrl","bootstrapModule","catch","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {Component, ComponentFactoryResolver, HostListener, OnInit, ViewChild} from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: `\n    <div>\n      <app-work-items [fileUri]=\"fileUri\" [connectorUrl]=\"host\" *ngIf=\"resource ==='workItems'\">Loading app work items</app-work-items>\n    </div>\n  `,\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'Main page';\n  vscodeApi: object;\n  resource: string;\n  fileUri: string;\n  host: string;\n\n  @HostListener('window:message', ['$event'])\n  onMessage(event) {\n    const message = event.data; // The json data that the extension sent\n\n    // TODO:\n    console.log('test!');\n    switch (message.command) {\n      case 'search':\n        this.host = message.serverHost;\n        this.resource =  message.resource;\n        this.fileUri = message.folderUri;\n        break;\n\n      case 'findDocumentation': {\n        const serverHost = message.serverHost;\n        const folderUri = message.folderUri;\n        const queryTerm = message.queryTerm;\n        console.log(serverHost);\n        console.log(queryTerm);\n        console.log(folderUri);\n        break;\n      }\n    }\n  }\n\n  ngOnInit(): void {\n    // @ts-ignore\n    this.vscodeApi = acquireVsCodeApi();\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { WorkItemsComponent } from './work-items/work-items.component';\nimport { ToMarkdownPipe } from './toMarkdown.pipe';\nimport { InfiniteScrollModule } from 'ngx-infinite-scroll';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    WorkItemsComponent,\n    ToMarkdownPipe\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    InfiniteScrollModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Pipe, PipeTransform } from '@angular/core';\nimport Showdown from 'showdown';\n@Pipe({\n  name: 'toMarkdown'\n})\nexport class ToMarkdownPipe implements PipeTransform {\n\n  transform(value: string, ...args: unknown[]): string {\n    return new Showdown.Converter().makeHtml(value).replace(/<pre>/g, `\n    <div style=\"white-space: pre-wrap !important; width: 99% !important;\">`);\n  }\n\n}\n","import {Component, EventEmitter, Input, OnInit} from '@angular/core';\nimport {WorkItem} from './work-item';\nimport {delay, switchMap, tap} from 'rxjs/operators';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {environment} from '../../environments/environment';\n\nclass PreFetchResponse {\n  constructor(readonly identifier: string, readonly message: string) {}\n}\n\n@Component({\n  selector: 'app-work-items',\n  template: `\n    <div class=\"results\" infinite-scroll (scrolled)=\"onScrolledDown()\" (scrolledUp)=\"onScrolledUp()\">\n      <div *ngFor=\"let workItem of workItems\">\n        <h1>{{workItem.title}}</h1>\n        <div [innerHTML]=\"workItem.body | toMarkdown \"></div>\n      </div>\n    </div>\n  `,\n  styles: []\n})\nexport class WorkItemsComponent implements OnInit {\n\n  @Input() fileUri: string;\n  @Input() connectorUrl: string;\n\n  currentPage = 0;\n  workItems: WorkItem[] = [];\n  currentIdentifier: PreFetchResponse;\n\n  constructor(private http: HttpClient) {}\n\n  ngOnInit(): void {\n    this.updatePageContent();\n  }\n\n  private updatePageContent() {\n    this.getWorkItems().subscribe(items => items.forEach(\n      item => {\n        this.workItems.push(item);\n      }\n    ));\n  }\n\n  onScrolledDown() {\n    console.log('scrolled down');\n    this.currentPage++;\n    this.updatePageContent();\n  }\n\n  onScrolledUp() {\n    console.log('scrolled up');\n  }\n\n  private fetchWorkItems(): Observable<WorkItem[]> {\n    return this.http.get<PreFetchResponse>(`http://${this.connectorUrl}/workItems?uri=${this.fileUri}`)\n      .pipe(\n        tap(result => {\n          console.log(result.identifier);\n        }),\n        delay(2000),\n        switchMap((value) => {\n            this.currentIdentifier = value;\n            return this.fetchResults(value);\n          }\n        ));\n  }\n\n  fetchResults(value: PreFetchResponse) {\n    return this.http.get<WorkItem[]>(`http://${this.connectorUrl}/workItems/${value.identifier}?page=${this.currentPage}`).pipe(\n      tap(result => {\n        console.log(result);\n      })\n    );\n  }\n\n  getWorkItems(): Observable<WorkItem[]> {\n    if (this.currentIdentifier !== undefined) {\n      return this.fetchResults(this.currentIdentifier);\n    } else {\n      return this.fetchWorkItems();\n    }\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  daemonHostUrl: 'localhost:9999'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}